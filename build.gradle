plugins {
  id 'java'
  id 'application'
  id 'maven-publish'
  alias(libs.plugins.jreleaser)
  alias(libs.plugins.semverguru)
}

group = 'de.gurkenlabs'

java {
  sourceCompatibility = JavaVersion.VERSION_22
  targetCompatibility = JavaVersion.VERSION_22
}

application {
  mainClass = 'de.gurkenlabs.input4j.Program'
}

repositories {
  mavenCentral()
}

dependencies {
  testImplementation libs.junit.jupiter
}

test {
  useJUnitPlatform()
}

jar {
  manifest {
    attributes 'Implementation-Title': "LITIENGINE input playground",
      'Main-Class': 'de.gurkenlabs.input4j.Program',
      'Enable-Native-Access': 'ALL-UNNAMED'
  }
}

test {
  jvmArgs += '--enable-native-access=ALL-UNNAMED'
}

task remoteDebug(type: JavaExec) {
  mainClass = 'de.gurkenlabs.input4j.examples.ExamplePollAllInputDevicesManually'  // replace with your main class
  classpath = sourceSets.main.runtimeClasspath
  args = ['run']

  jvmArgs = [
    '-Xdebug',
    '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005'
  ]
}

tasks.withType(JavaExec).configureEach {
  jvmArgs += '--enable-native-access=ALL-UNNAMED'
}

afterEvaluate {
  jreleaser {
    configFile = file('jreleaser.yml')
    signing {
      active = 'ALWAYS'
      armored = true
    }
    deploy {
      maven {
        mavenCentral {
          'release-deploy' {
            active = 'RELEASE'
            url = 'https://central.sonatype.com/api/v1/publisher'
            stagingRepository('target/staging-deploy')
          }
        }
        nexus2 {
          'snapshot-deploy' {
            active = 'SNAPSHOT'
            snapshotUrl = 'https://central.sonatype.com/repository/maven-snapshots'
            applyMavenCentralRules = true
            snapshotSupported = true
            closeRepository = true
            releaseRepository = true
            stagingRepository('target/staging-deploy')
          }
        }
        github {
          active = 'ALWAYS'
        }
      }
    }
  }
}
